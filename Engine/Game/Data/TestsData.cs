// ------------------------------------------------------------------------------
//  <autogenerated>
//      This code was generated by a tool.
//      Mono Runtime Version: 4.0.30319.1
// 
//      Changes to this file may cause incorrect behavior and will be lost if 
//      the code is regenerated.
//  </autogenerated>
// ------------------------------------------------------------------------------
using System;

using UnityEngine;

using Engine.Data.Json;

public class DataKeyedObjectLeaf : DataKeyedObject {

    public string otherProperty = "";
}



public class TestsData {

    public static void Advance(string name) {
        Debug.Log("----------------------------------\r\n\r\n");
        Debug.Log(name);
        Debug.Log("----------------------------------\r\n\r\n");
    }

    public static void RunTest() {

        Advance("Running tests...");

        
        ContentsConfig.contentRootFolder = "drawlabs";
        ContentsConfig.contentAppFolder = "game-drawlabs-brainball";
        ContentsConfig.contentDefaultPackFolder = "game-drawlabs-brainball-1";
        ContentsConfig.contentVersion = "1.0";
        ContentsConfig.contentIncrement = 2;
        
        Advance("Creating Contents cache paths");
        ContentPaths.CreateCachePaths();

        Advance("TestGameCharacterSkin");
        TestGameCharacterSkin();

        Advance("TestGameCharacterSkinLoadData");
        TestGameCharacterSkinLoadData();
    }

    public static void TestDefault() {

        DataKeyedObjectLeaf leaf = new DataKeyedObjectLeaf();

        leaf.active = true;

        leaf.display_name = "tester";
        
        Debug.Log("DataKeyedObjectLeaf:leaf:display_name:" + leaf.display_name);
        Debug.Log("DataKeyedObjectLeaf:leaf:display_name2:" + leaf.Get(BaseDataObjectKeys.display_name));

        string leafData = JsonMapper.ToJson(leaf);

        Debug.Log("DataKeyedObjectLeaf:leafData:" + leafData);

        DataKeyedObjectLeaf leaf2 = new DataKeyedObjectLeaf();

        leaf2 = JsonMapper.ToObject<DataKeyedObjectLeaf>(leafData);
        
        Debug.Log("DataKeyedObjectLeaf:display_name:" + leaf2.display_name);
        
        string leaf2Data = JsonMapper.ToJson(leaf2);
        
        Debug.Log("DataKeyedObjectLeaf:leaf2Data:" + leaf2Data);

        
        AssertEquals("DataKeyedObjectLeaf", leaf, leaf2);
    }

    public static bool AssertEquals(string name, object a, object b) {
        string dataA = a.ToJson();
        string dataB = b.ToJson();
        bool equal = false;
        if(dataA == dataB) {            
            equal = true;
            Debug.Log(name + ": SUCCESS :" + equal);
            return equal;
        }
        else {       
            Debug.LogError(name + ": FAIL :" + equal);
        }
        return equal;
    }

    // -----------------------------------------------------------------
    // GAME CHARACTER SKIN

    public static void TestGameCharacterSkin() {

        string name = "TestGameCharacterSkin";
        
        Debug.Log(name);
        
        GameCharacterSkin obj1 = new GameCharacterSkin();
        GameCharacterSkin obj2 = new GameCharacterSkin();
        
        obj1.active = true;
        
        obj1.display_name = "tester";
        
        string obj1Data = JsonMapper.ToJson(obj1);
                
        obj2 = JsonMapper.ToObject<GameCharacterSkin>(obj1Data);
        
        string obj2Data = JsonMapper.ToJson(obj2);

        AssertEquals(name, obj1, obj2);
    }
    
    public static void TestGameCharacterSkinLoadData() {
        
        string name = "TestGameCharacterSkinLoadData";
        
        Debug.Log(name);

        try {
            GameCharacterSkins.Instance.LoadData();

            Debug.Log(name + ":GameCharacterSkins:" + GameCharacterSkins.Instance.items.Count);
            Debug.Log(name + ":SUCCESS:" + true);
        }
        catch(Exception e) {

            Debug.Log(e);
        }
    }
    
}



